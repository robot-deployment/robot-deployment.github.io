{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-robot-deployment","title":"Welcome to Robot Deployment","text":"<p>see the Spring 2023 site for the first iteration of the course</p>"},{"location":"course-info/links/","title":"Links","text":""},{"location":"course-info/links/#turtlebot-resources","title":"Turtlebot resources","text":"<ul> <li>manual https://turtlebot.github.io/turtlebot4-user-manual/</li> <li>manual repository</li> <li>https://clearpathrobotics.com/turtlebot-4/</li> <li>turtlebot github site https://github.com/turtlebot</li> <li>images: http://download.ros.org/downloads/turtlebot4/</li> <li>unboxing: https://www.youtube.com/watch?v=QN01AXjoLdQ</li> <li>driving: https://turtlebot.github.io/turtlebot4-user-manual/tutorials/driving.html</li> </ul>"},{"location":"course-info/links/#irobot-create3-documentation","title":"IRobot Create3 Documentation","text":"<ul> <li> <p>https://iroboteducation.github.io/create3_docs/</p> </li> <li> <p>https://iroboteducation.github.io/create3_docs/hw/overview/</p> </li> </ul>"},{"location":"course-info/links/#ros2-humble","title":"Ros2 humble","text":"<ul> <li>https://docs.ros.org/en/humble/index.html</li> <li>https://answers.ros.org/question/292566/what-is-the-difference-between-local_setupbash-and-setupbash/</li> </ul>"},{"location":"course-info/links/#raspberry-pi4","title":"Raspberry Pi4","text":"<ul> <li>https://www.raspberrypi.com/products/raspberry-pi-4-model-b/</li> <li>https://www.raspberrypi.com/documentation/computers/getting-started.html</li> </ul>"},{"location":"course-info/links/#courses","title":"Courses","text":"<p>https://www.udemy.com/course/ros-for-beginners/?referralCode=F41DAF6F3EA18F324DD7</p>"},{"location":"course-info/links/#whole-websites","title":"Whole Websites","text":"<ul> <li>https://roboticsbackend.com</li> <li>https://nu-msr.github.io/me495_site/</li> <li>https://vnav.mit.edu/</li> <li>https://vnav.mit.edu/labs/lab2/</li> <li>https://vnav.mit.edu/labs/lab3/</li> </ul>"},{"location":"course-info/links/#specific-topics","title":"Specific Topics","text":""},{"location":"course-info/links/#organization","title":"Organization","text":"<p>When you define your whole project without external dependencies:</p> <p>https://www.google.com/search?q=managing+ros+installation+multiple+packages+different+repositories&amp;client=firefox-b-1-d&amp;ei=8k9QY6W6H_DDkPIPuKSX6AI&amp;ved=0ahUKEwil-5i_g-36AhXwIUQIHTjSBS0Q4dUDCA4&amp;uact=5&amp;oq=managing+ros+installation+multiple+packages+different+repositories&amp;gs_lcp=Cgdnd3Mtd2l6EAM6CggAEEcQ1gQQsAM6BQghEKABOggIIRAWEB4QHToFCCEQqwI6BQgAEKIEOgcIIRCgARAKSgQITRgBSgQIQRgASgQIRhgAUIYHWLdBYLpCaAZwAXgAgAHOAYgB3C-SAQYwLjQyLjGYAQCgAQHIAQjAAQE&amp;sclient=gws-wiz</p> <p>https://roboticsbackend.com/package-organization-for-a-ros-stack-best-practices/</p> <p>https://nu-msr.github.io/me495_site/custom_ws.html</p> <p>https://answers.ros.org/question/218498/best-practice-one-git-repo-per-package/ https://docs.ros.org/en/foxy/How-To-Guides/Package-maintainer-guide.html https://www.reddit.com/r/ROS/comments/o1gymd/git_strategies_for_including_other_packages_and/</p>"},{"location":"course-info/links/#linux","title":"Linux","text":"<ul> <li>https://explainshell.com/explain?cmd=nmap+-sn</li> </ul>"},{"location":"course-info/links/#textbooks","title":"Textbooks","text":"<p>http://wiki.ros.org/Books</p> <p>https://www.routledge.com/A-Concise-Introduction-to-Robot-Programming-with-ROS2/Rico/p/book/9781032264653</p> <p>Companion github repository</p>"},{"location":"course-info/links/#papers","title":"Papers","text":"<p>https://www.researchgate.net/publication/340059734_A_Self-Driving_Car_Architecture_in_ROS2/link/5e80bf2b458515efa0b874d8/download</p>"},{"location":"course-info/links/#tutorials","title":"Tutorials","text":"<p>https://maker.pro/ros/tutorial/robot-operating-system-2-ros-2-introduction-and-getting-started</p>"},{"location":"course-info/links/#ros-services","title":"Ros services","text":"<p>https://www.theconstructsim.com/for-campus/</p>"},{"location":"course-info/links/#microros-and-ros-on-esp32","title":"MicroROS and Ros on ESP32","text":"<ul> <li>https://ubuntu.com/blog/getting-started-with-micro-ros-on-raspberry-pi-pico</li> <li>https://blog.hadabot.com/set-up-esp32-microcontroller-for-ros2-robotics.html</li> <li>https://github.com/RobotWebTools/rosbridge_suite</li> <li>Hadabot</li> <li>https://www.hadabot.com/new-user-software-stack-setup.html</li> <li>https://blog.hadabot.com/set-up-esp32-microcontroller-for-ros2-robotics.html</li> <li>https://github.com/hadabot/hadabot_main/blob/master/firmware/uhadabot/uroslibpy/ros.py</li> </ul> <p>## To ROS or not to ROS</p> <ul> <li>https://pulurobotics.fi/blog/pulurobotics-blog-1/post/why-don-t-we-use-ros-7</li> <li>https://www.theconstructsim.com/not-using-ros-robotics-product/</li> </ul>"},{"location":"course-info/syllabus/","title":"Syllabus","text":""},{"location":"course-info/syllabus/#overview","title":"Overview","text":"<p>Experimentation and Deployment of Robotic Systems is a course organized around the principles of robotic data collection, aggregation, interaction, and decision-making so that students can more effectively conduct experimental validation of robotic systems, deploy mobile and autonomous robotic systems, and more closely interact with robots across various types of real and synthetic data streams.  It walks students through the principles of interacting with sensors and hardware, signal conditioning, and model-driven data, building data pipelines for the purposes of data collection, visualization, and control.  This class studies resulting systems, with a focus on communication, data, and decision-making, with application-specific experimental/mobile projects.  </p>"},{"location":"course-info/syllabus/#class-basics","title":"Class Basics","text":""},{"location":"course-info/syllabus/#section-info-and-meeting-times","title":"Section Info and Meeting Times","text":"<p>Class: EGR 598-- Experimentation and Deployment of Robotic Systems Class Schedule:  Monday / Wednesday 10:30pm-11:45pm Meeting Location: Polytechnic Campus, Tech 162 Course Number:  37405</p>"},{"location":"course-info/syllabus/#instructor-contact-info","title":"Instructor Contact Info","text":"<p>Instructor: Daniel M. Aukes E-mail: danaukes@asu.edu Instructor Office: Tech 152, Polytechnic Campus  </p>"},{"location":"course-info/syllabus/#office-hours","title":"Office Hours","text":"<p>Office Hours will held weekly starting week 2 or may be made by appointment.  I will run a survey to identify the best time to hold office hours within my own constraints.  This document will be updated to reflect the official office hours that start week 2.  This document will be updated to reflect up-to-date office hours as needed.</p>"},{"location":"course-info/syllabus/#prerequisites","title":"Prerequisites","text":"<p>There are no formal prerequisites, but students taking EGR598 should be familiar with:</p> <ul> <li>Programming fundamentals, ideally in a scripted language like Python or Matlab.</li> <li>Linear algebra, differential equations, calculus, trigonometry, vectors, etc.</li> <li>The fundamentals of embedded systems, mechatronics</li> <li>The basics of serial communication, such as TCP/IP and other common ethernet protocols</li> <li>Willing to try Ubuntu</li> </ul>"},{"location":"course-info/syllabus/#course-objectives","title":"Course Objectives","text":"<p>At the end of this course, students will demonstrate proficiency in synthesizing concepts from across a number of engineering domains including robotics, modeling and analysis, optimization, data collection and experimental validation, etc.  This includes:</p>"},{"location":"course-info/syllabus/#expected-learning-outcomes","title":"Expected Learning Outcomes","text":""},{"location":"course-info/syllabus/#repositories-and-version-control","title":"Repositories and Version Control","text":"<ul> <li>You will be able to employ the basic functions of version control tools like git</li> <li>You will be able to create a new project in version control tools like git</li> <li>You will be able to structure a new project in version control tools like git using submodules</li> <li>You can demonstrate documenting your project in version control tools like git</li> </ul>"},{"location":"course-info/syllabus/#robotics","title":"Robotics","text":"<ul> <li>You will be able to read from or write to existing hardware data streams in ROS</li> <li>You will be able to develop new data streams for existing off-the-shelf hardware in ROS</li> <li>You will be able to develop data streams for novel hardware in ROS</li> <li>You will be able to develop basic controllers</li> <li>You will be able to develop and deploy higher-level controllers and algorithms for sensing and control.</li> </ul>"},{"location":"course-info/syllabus/#experimentation","title":"Experimentation","text":"<ul> <li>You will understand best practices for developing an experiment</li> <li>Understand ways to reduce noise and variation</li> <li>Develop a small experiment and collect data</li> <li>Interpret sources of error and corrective actions</li> </ul>"},{"location":"course-info/syllabus/#robot-hardware-and-communiation","title":"Robot Hardware and Communiation","text":"<ul> <li>you will be able to install tools like the Robot Operating System (ROS)</li> <li>You will be able to publish and subscribe to topics through a communication layer such as ROS</li> <li>You will be able to create and deploy nodes and services coded in languages like Python and C++</li> </ul>"},{"location":"course-info/syllabus/#team-based-project-management-communication-etc","title":"Team-based project management, communication, etc","text":"<ul> <li>Develop a project website for communicating progress in various forms</li> <li>Present work orally to the class</li> <li>Present work in written form.</li> <li>Present data usefully, in graphical forms.</li> <li>Present work through edited videos.</li> </ul>"},{"location":"course-info/syllabus/#textbook-materials-equipment-and-personal-laptops","title":"Textbook, Materials, Equipment, and Personal Laptops","text":""},{"location":"course-info/syllabus/#textbook","title":"Textbook","text":"<p>A Concise Introduction to Robot Programming with ROS2(recommended) Francisco Mart\u00edn Rico 1st Edition eBook ISBN 9781003289623  </p>"},{"location":"course-info/syllabus/#software","title":"Software","text":"<p>You will be expected to install and use the following software (not a complete list)</p> <ul> <li>Virtualbox</li> <li>In a Virtual Machine:<ul> <li>Ubuntu 22.04</li> <li>ROS2 (humble)</li> <li>various other programs</li> </ul> </li> </ul> <p>This class is friendly to all operating systems.  Students have used Windows, Ubuntu or OS/X on their own in the past with no problems.</p>"},{"location":"course-info/syllabus/#computers","title":"Computers","text":"<p>It is expected that you can bring a laptop to class to complete in-class programming tasks.  </p>"},{"location":"course-info/syllabus/#hardware-specs","title":"Hardware Specs","text":"<ul> <li>8Gb RAM</li> <li>minimum 50Gb free space</li> </ul>"},{"location":"course-info/syllabus/#peripheral-requirements","title":"Peripheral Requirements","text":"<ul> <li>Admin access to home router with both 2.4GHz and 5GHz available</li> <li>Computer monitor</li> <li>4-port USB hub</li> <li>wired ethernet port or USB dongle (optional)</li> <li>various USB cables (micro/mini/USB-C)</li> </ul>"},{"location":"course-info/syllabus/#other-equipment","title":"Other Equipment","text":"<p>Special tools and equipment required for completeing this class will be made available for use on the Poly Campus.  </p>"},{"location":"course-info/syllabus/#checkout","title":"Checkout","text":"<p>Checkout of equipment or reusable parts may be possible through Dr. Aukes, the Innovation Hub, or Peralta Labs.  Any checked-out tools or parts must be returned in order to receive a grade in the class.</p>"},{"location":"course-info/syllabus/#other-recommended-resources","title":"Other recommended resources","text":"<ul> <li>Adobe Creative Cloud, available to all ASU students for free: https://uto.asu.edu/adobe-creative-cloud.</li> <li>Microsoft Office (Microsoft 365 is free for all currently-enrolled ASU students)</li> <li>Solidwoks, available via https://myapps.asu.edu</li> </ul>"},{"location":"course-info/syllabus/#project","title":"Project","text":"<p>The final project will involve developing and deploying a robotic system using the methods introduced in this class.   The project will span the last few weeks of the semester.</p>"},{"location":"course-info/syllabus/#class-schedule","title":"Class Schedule","text":"<p>The class schedule can be found on Canvas.  It is subject to change, and will be updated regularly. It is your responsibility to keep track of all due dates and times, which will all be found on canvas.</p>"},{"location":"course-info/syllabus/#tentative-schedule1","title":"Tentative Schedule\\(^1\\)","text":"<ol> <li>Welcome &amp; Syllabus</li> <li>Virtual Machines &amp; Linux I</li> <li>Linux</li> <li>Networking &amp; SSH</li> <li>Networking &amp; SSH</li> <li>Git &amp; Github</li> <li>ROS I - Installing, Setup, Basic Concepts</li> <li>ROS II - Workspaces &amp; Packages</li> <li>ROS III - Turtlebot</li> <li>ROS IV - OpenCV</li> <li>ROS V - Bag Files, QOS,Data</li> <li>OpenCV</li> <li>OpenCV II</li> <li>DepthAI Camera</li> <li>ROS VI - Messages</li> <li>Linear Filters</li> <li>Working with IMUs</li> <li>Kalman Filter</li> <li>Deep Learning and Neural Networks</li> <li>LeNet from Scratch</li> <li>ROS VI - PyQt and GUIs</li> <li>ROS VII - Launch Files</li> <li>ROS VIII - RViz &amp; Transforms</li> <li>ROS IX - Robot Arms, Controllers, MoveIt</li> <li>ROS X - ROS Bridge &amp; Microcontrollers</li> <li>Flex Day - (Project)</li> <li>Flex Day - (Project)</li> <li>Flex Day - (Project)</li> <li>Flex Day - (Project)</li> <li>Final Presentations                      |</li> </ol> <p>\\(^1\\) The Schedule is subject to change with appropriate warning.</p>"},{"location":"course-info/syllabus/#assignments","title":"Assignments","text":"<p>Expect roughly 10 assignments consisting of tasks to complete at home related to the week's lecture topics.</p> Item Type week Assignment 1 Individual 1 Assignment 2 Individual 2 Assignment 3 Individual 4 Assignment 4 Individual 6 Assignment 5 Individual 8 Assignment 6 Team 10 Assignment 7 Team 12 Assignment 8 Team 14 Assignment 9 Team 15 Assignment 10 Team 16 <p>Assignments, totals, relative weighting, and due dates are subject to change with appropriate warning.  Please see Canvas for the current schedule.</p>"},{"location":"course-info/syllabus/#weighting","title":"Weighting","text":"Type Percentage Individual Assignments 40 Team Assignments 40 Midterm / Quizzes 15 Attendance 5"},{"location":"course-info/syllabus/#how-to-succeed-in-this-course","title":"How to Succeed in this Course","text":"<ul> <li>Attend all class sessions</li> <li>Complete all pre-class preparation assignments and reading</li> <li>Complete all post-class follow up assignments and reading</li> <li>Participate in office hours</li> <li>Check your ASU email regularly</li> <li>Log in to the Canvas at least once each week</li> <li>Communicate proactively with your instructor</li> <li>Create a study schedule so that you don\u2019t fall behind on assignments</li> </ul>"},{"location":"course-info/syllabus/#grading-policies","title":"Grading Policies","text":"<p>The goal of assignments is to develop a fundamental understanding of the topics required to deploy robotic systems in experiment designs and in the field.</p>"},{"location":"course-info/syllabus/#assignments-are-on-canvas","title":"Assignments are on Canvas","text":"<p>Assignments will be posted to Canvas throughout the semester.  It is the student's responsibility to check canvas periodically for announcements and posted material.  Assignments will cover many of the topics presented in class.  </p>"},{"location":"course-info/syllabus/#type-of-assignments","title":"Type of Assignments","text":"<p>Assigned work may be in the form of a longer-form, weekly assignment intended to teach a new fundamental skill, or it may be a short, small-point-value assignment consisting of tasks that must be completed in order for you to complete other milestones.  Some surveys also have a small number of points assigned to them, to ensure student participation.  In-class work generally serves as a starting point for assigned homework and is typically ungraded, though it may be graded occasionally.  </p> <p>Please see the \"Rubric\" section of each assignment for assignment-specific expectations.</p>"},{"location":"course-info/syllabus/#project-vs-individual-assignments","title":"Project vs. Individual Assignments","text":"<p>Assigned work may be individual in nature or team-based project assignments.  Individual assignments will be graded on an individual basis, and are intended to reflect your own work.  Please use the discussion board feature on Canvas when you have a question. Copying others' work is not permitted. </p> <p>The grade for team-based assignments will be shared by all participating members.  </p>"},{"location":"course-info/syllabus/#quizzes","title":"Quizzes","text":"<p>I will hold up to 2 quizzes without notice at the beginning of class.  These will be worth between 3-5% of your grade.</p>"},{"location":"course-info/syllabus/#midterm","title":"Midterm","text":"<p>There is one midterm exam.</p> <ul> <li>It will include all topics from the course up to that point.</li> <li>It will be held during the designated exam period or during a class period.  The specific date/time will be announced in advance.</li> </ul>"},{"location":"course-info/syllabus/#final-exam","title":"Final Exam","text":"<p>There is no final exam.  The final project, composed of the last few team assignments, will serve as the final.</p>"},{"location":"course-info/syllabus/#grading-scale","title":"Grading Scale","text":"<p>Final points will receive a letter grade according to the following table:</p> Grade Range A+ 97-100.0 A 93-96.9 A- 90-92.9 B+ 87-89.9 B 83-86.9 B- 80-82.9 C+ 77-79.9 C 70-76.9 D 60-69.9 E 0-59.9"},{"location":"course-info/syllabus/#grading-rubric","title":"Grading Rubric","text":"<p>Some assignments will be graded according to rubric with number values corresponding to a sliding qualitative scale .  The following is a general description of what each percentage means in this course:</p> Description % Exceeds Expectations. Shows superior effort, quality, mastering of the concepts.  Innovation in the execution of submitted work.  Documentation is publication-ready. 100 Above expectations.  Demonstrates full understanding of the problem, and solution is well executed, documented, and presented. 85 Meets expectations.  Minor mistakes are present, but student demonstrates a general understanding of the concepts.  Documentation present but perhaps not comprehensive. 70 Below expectations. Some effort shown, though there may be serios flaws in analysis or execution.  Documentation lacking in certain areas. 55 Fails to meet minimum expections.  Minimal effort shown.  Does not show understanding and may not have thought through their methods.  Documentation is lacking substance, clarity, completeness, evidence of effort. 40 Not submitted, illegible, not readable, not properly linked 0"},{"location":"course-info/syllabus/#late-penalities","title":"Late Penalities","text":"<p>Due to the nature of this class, failing to turn in an assignment on time affects you and your classmates, as each concept builds on the last.  It is your responsibility to get in touch with the instructor regarding any questions before assignments are due.  Late submissions will lose one letter grade(10%) for every day they are late\\(^4\\).  Any sumbission more than four days late will receive a zero.  Additionally, due to the nature of the submission process, late CATME assignments will not be accepted.</p> <p>All assignments must be submitted to Canvas by the date and time noted in Canvas.</p> <p>\\(^4\\) meaning 10% of the total possible number of points</p>"},{"location":"course-info/syllabus/#submitting-and-presenting-work","title":"Submitting and Presenting work","text":"<p>Assignment submissions must follow the \"Submission Best Practices\" document shared on Canvas.  It outlines the expectations for well written assignments, reports, and presentations.</p> <p>Assigned homework will be submitted for grading several different ways.  This is always indicated in the \"Submission\" section of each assignment.</p> <ul> <li>It may be submitted for grading via Canvas.  </li> <li>Other work involving external tools (Google Surveys, CATME, etc) will be graded based on submitting to that external tool.  </li> <li>Some work will be presented in front of the class, and the grade derived from the presentation.  </li> <li>Other work will be compiled into the design notebook (in the form of a website or report) and graded priodically.</li> </ul> <p>It is the student's responsibility to pay close attention to each assignment's submission instructions, as each assignment indicates the method by which the work must be submitted for grading.  Failure to submit work in the manner asked for in each assignment will result in a zero.</p>"},{"location":"course-info/syllabus/#course-policies","title":"Course Policies","text":""},{"location":"course-info/syllabus/#attendance","title":"Attendance","text":"<p>It must be noted that attendance is extremely important; irregular attendance typically results in poor or mediocre performance.</p> <p>Attendance will be taken at the start of each class, and may be administered via online link, class photo, or form.  If you have any concerns, please see the instructor.  This means that absences and tardies are treated the same.</p> <p>For each missed class greater than 2, you will lose 20% of your attendance grade.</p> <p>Excused absences for classes will be given without penalty to the grade in the case of (1) a university-sanctioned event [ACD 304-02]; (2) religious holidays [ACD 304-04]; a list of religious holidays can be found here https://eoss.asu.edu/cora/holidays ]; (3) work performed in the line-of-duty according [SSM 201-18]. ; and (4) illness, quarantine or self-isolation related to illness as documented by a health professional.</p> <p>Students who request an excused absences must follow the policy/procedure guidelines.</p> <p>Excused absences do not relieve students of responsibility for any part of the course work required during the period of absence.</p> <p>Absences for illness, quarantine or self-isolation related to illness should be documented by a health professional and communicated to the instructor as soon as possible by email at danaukes@asu.edu.</p>"},{"location":"course-info/syllabus/#classroom-behavior","title":"Classroom Behavior","text":""},{"location":"course-info/syllabus/#summary","title":"Summary","text":"<ul> <li>Keep all communication professional</li> <li>Turn off all cell phones, pagers, and other personal devices when participating in class</li> <li>Use your laptops for classroom activities, not email, chats, web browsing, or other non-class related activities.</li> </ul>"},{"location":"course-info/syllabus/#details","title":"Details","text":""},{"location":"course-info/syllabus/#professional-communication","title":"Professional Communication","text":"<p>Professional Communication in all forms is required.  This includes proper dress when attending class remotely and in-person.  Please refrain from using any background images in your zoom video feed, though you should consider blacking out your background for privacy and professionalism.</p>"},{"location":"course-info/syllabus/#cell-phones-pagers-and-other-personal-devices","title":"Cell phones, pagers, and other personal devices","text":"<p>Cell phones, pagers, and other personal devices must be turned off during class to avoid causing distractions.  The use of recording devices is not permitted during class.  Any violent or threatening conduct by an ASU student in this class will be reported to the ASU Police Department and the Office of the Dean of Students.  </p>"},{"location":"course-info/syllabus/#use-of-laptops-in-class","title":"Use of laptops in class","text":"<p>Laptops are strongly suggested for this course.  You may use your laptop to take notes, during tutorial sessions, or when giving presentations.  Please do not use class time for emails, chats, web browsing, or other non-class related activities.</p>"},{"location":"course-info/syllabus/#reorganizing-a-team","title":"Reorganizing a Team","text":""},{"location":"course-info/syllabus/#summary_1","title":"Summary","text":"<ul> <li>Please try to work out any team-based issues.</li> <li>Please see me if the team is not working.  I may choose to split the team</li> </ul>"},{"location":"course-info/syllabus/#details_1","title":"Details","text":"<p>Reorganizing teams is not a desired outcome of a group project but is sometimes necessary if dysfunction rises to a level that it cannot complete the project.  One or more teammates or the instructor may initiate the process to split or reorganize a team.  Splitting teams does not necessarily work in any members' best interests, as team-based Team Assignments, which each team member must contribute to, are afterwards spread across fewer people.</p> <p>However, if the need arises, members must work with the professor to outline the issues which are creating the need to reorganize and the measures which remaining teammates may take to rectify the situation.  This can take the form of changes made to communication, workload reallocation, new meeting times, etc.  The professor will have the final say in establishing a set of expectations for the team, which must be met within a week.  If members fail to live up to these expectations, the team may be split and reorganized, as deemed necessary by the instructor.</p> <p>When reorganiztion occurs, each new team will set up their own folders starting with the former team's work, but  new material will be created by the new team, and old material adapted based on the new direction of each new team.  Any changes to the project definition due to the split (such as project scope, performance specifications, timeline, etc) will need to be coordinated with the instructor for all future submissions or presentations.</p> <p>The instructor has the final say in the establishment and reoganization of teams.</p>"},{"location":"course-info/syllabus/#academic-integrity","title":"Academic Integrity","text":"<p>This class is meant to teach you how to create and use your own design tools for creating folding robots using a variety of published resources, online resources, and classroom content.  I encourage you to plumb the depths of what's available; through this synthesis you might be able to create something unique.  However, I expect to be able to tell what is your work and what is someone else's.  For this reason, specific rules for this class are:</p>"},{"location":"course-info/syllabus/#specific-rules","title":"Specific Rules","text":"<ul> <li>Do your own work for individual assignments and tests.</li> <li>Include the your sources of inspiration within assignments and projects.  This will help grow the list of cool references, but more importantly, help distinguish inspiration from wholesale plagarism.</li> <li>Keep code/text/information you use from outside sources separate from your own original content (through the use of separate folders, for example).  Make it explicit what is yours and what is not.</li> <li>Include all the licenses or copyright statements as required by the things you reuse.  This will make your own code more reuseable for yourself and potentially others in the future.</li> <li>See https://provost.asu.edu/academic-integrity/policy for more info.</li> </ul> <p>Students in this class must adhere to ASU\u2019s academic integrity policy, which can be found at https://provost.asu.edu/academic-integrity/policy. Students are responsible for reviewing this policy and understanding each of the areas in which academic dishonesty can occur. In addition, all engineering students are expected to adhere to both the ASU Academic Integrity Honor Code and the Fulton Schools of Engineering Honor Code. All academic integrity violations will be reported to the Fulton Schools of Engineering Academic Integrity Office (AIO).  The AIO maintains record of all violations and has access to academic integrity violations committed in all other ASU college/schools.</p>"},{"location":"course-info/syllabus/#recordings","title":"Recordings","text":"<p>Note that class sessions may be recorded, and recordings provided to enrolled students, instructors or instructional support personnel as deemed necessary by the course instructor. If you have concerns about being recorded, please contact the course instructor.</p>"},{"location":"course-info/syllabus/#copyright","title":"Copyright","text":"<p>All course content and materials, including lectures (Zoom recorded lectures included), are copyrighted materials and students may not share outside the class, upload to online websites not approved by the instructor, sell, or distribute course content or notes taken during the conduct of the course (see ACD 304\u201306, \"Commercial Note Taking Services\" and ABOR Policy 5-308 F.14 for more information).</p> <p>You must refrain from uploading to any course shell, discussion board, or website used by the course instructor or other course forum, material that is not the student's original work, unless the students first comply with all applicable copyright laws; faculty members reserve the right to delete materials on the grounds of suspected copyright infringement.</p>"},{"location":"course-info/syllabus/#policy-against-threatening-behavior-per-the-student-services-manual-ssm-10402","title":"Policy against threatening behavior, per the Student Services Manual, SSM 104\u201302","text":"<p>Students, faculty, staff, and other individuals do not have an unqualified right of access to university grounds, property, or services. Interfering with the peaceful conduct of university-related business or activities or remaining on campus grounds after a request to leave may be considered a crime. All incidents and allegations of violent or threatening conduct by an ASU student (whether on- or off-campus) must be reported to the ASU Police Department (ASU PD) and the Office of the Dean of Students.</p>"},{"location":"course-info/syllabus/#disability-accommodations","title":"Disability Accommodations","text":"<p>Suitable accommodations will be made for students having disabilities. Students needing accommodations must register with the ASU Disabilities Resource Center and provide documentation of that registration to the instructor. Students should communicate the need for an accommodation in sufficient time for it to be properly arranged. See ACD 304-08 Classroom and Testing Accommodations for Students with Disabilities.  </p> <p>The Americans with Disabilities Act (ADA) is a federal antidiscrimination statute that provides comprehensive civil rights protection for persons with disabilities. One element of this legislation requires that all qualified students with documented disabilities be guaranteed a learning environment that provides for reasonable accommodation of their disabilities. If you believe you have a disability requiring an accommodation please contact the Disability Resource Center at ASU Polytechnic located in Student Affairs Quad # 4 or call 480-727-1039 / TTY: 480-727-1009.  Eligibility and documentation policies are online at:  http://www.asu.edu/studentaffairs/ed/drc/</p>"},{"location":"course-info/syllabus/#harassment-and-sexual-discrimination","title":"Harassment and Sexual Discrimination","text":"<p>Arizona State University is committed to providing an environment free of discrimination, harassment, or retaliation for the entire university community, including all students, faculty members, staff employees, and guests. ASU expressly prohibits discrimination, harassment, and retaliation by employees, students, contractors, or agents of the university based on any protected status: race, color, religion, sex, national origin, age, disability, veteran status, sexual orientation, gender identity, and genetic information.</p> <p>Title IX is a federal law that provides that no person be excluded on the basis of sex from participation in, be denied benefits of, or be subjected to discrimination under any education program or activity.  Both Title IX and university policy make clear that sexual violence and harassment based on sex is prohibited.  An individual who believes they have been subjected to sexual violence or harassed on the basis of sex can seek support, including counseling and academic support, from the university.  If you or someone you know has been harassed on the basis of sex or sexually assaulted, you can find information and resources at https://sexualviolenceprevention.asu.edu/faqs.</p> <p>As a mandated reporter, I am obligated to report any information I become aware of regarding alleged acts of sexual discrimination, including sexual violence and dating violence.  ASU Counseling Services, https://eoss.asu.edu/counseling is available if you wish to discuss any concerns confidentially and privately. ASU online students may access 360 Life Services, https://goto.asuonline.asu.edu/success/online-resources.html.</p>"},{"location":"course-info/syllabus/#student-support-services","title":"Student Support Services","text":"<ul> <li>ASU Libraries - offers 24/7 access to librarians through \"Ask a Librarian\" online chat and help by librarians in person at the Reference Desk during most hours the libraries are open. http://www.asu.edu/lib/</li> <li>Counseling and Consultation \u2013 provides confidential mental health and career counseling services for all ASU students. http://www.asu.edu/studentaffairs/counseling/</li> <li>Learning Resource Center \u2013 provides students with academic support services such as tutoring, peer advising, computer assisted instruction, and supplemental instruction.  Offers both free and fee-based services.  http://www.asu.edu/vpsa/lrc/</li> <li>Writing Center \u2013 provides on-site tutors to help students increase their confidence as writers and improve writing skills free of charge.  http://www.asu.edu/duas/wcenter/</li> <li>Career Services \u2013 offers assistance to students in choosing a major, setting career goals, interviewing and job hunting strategies. http://career.asu.edu/</li> <li>Student Financial Aid Office \u2013 offers information and applications for student funding such as grants, loans, scholarships and student employment. http://www.asu.edu/fa/</li> <li>Student Health and Wellness Center \u2013 provides non-emergency medical health care to all ASU students regardless of insurance status. Most visits with a physician or nurse practitioner are free of charge, but fees will be incurred for x-rays, lab results, etc., http://www.asu.edu/health/</li> <li>Student Recreational Center \u2013 offers individual and group fitness opportunities, as well as information on nutrition and wellness, and massages. Use of the general facilities (weights, circuit training and cardio machines) are free, other services (yoga classes, massages) are fee-based.  http://www.asu.edu/src/</li> <li>Student Legal Assistance \u2013 provides legal advice and counsel free of charge to all ASU students in areas such as landlord-tenant law, credit reports and collection issues, taxability of scholarships and grants, etc. Notary service is also available at no charge. http://www.asu.edu/mu/legal/</li> <li>Help Wiki \u2013 provides a frequently asked questions resource for technology users at ASU. http://wiki.asu.edu/help/</li> <li>EMPACT Crisis Hotline \u2013 offers free 24-hour support for mental health crises. Call (480) 784-1500 in the Phoenix area, (866) 205-5229 for the toll-free number outside of Phoenix, and (480) 736-4949 for the sexual assault hotline. All services are free and confidential. http://www.empact-spc.com/</li> </ul>"},{"location":"course-info/syllabus/#notice","title":"Notice","text":"<p>Any information in this syllabus (other than grading and absence policies) may be subject to change with reasonable advance notice.</p>"},{"location":"tutorials/jupyter-and-python/grab-data/","title":"Grab Data","text":"<pre><code>import rclpy\nfrom rclpy.node import Node\nfrom rclpy.qos import qos_profile_sensor_data\n\nfrom sensor_msgs.msg import Imu\n\nimport numpy\nimport yaml\n\n\nclass IMUDataLogger(Node):\n    labels = ['ax','ay','az']\n\n    def __init__(self):\n        super().__init__('imu_data_logger')\n        self.subscription = self.create_subscription(Imu,'/imu',self.listener_callback,qos_profile_sensor_data)\n        self.subscription  \n        self.t0 = None\n        self.history = None\n        self.fig  = None\n\n    def listener_callback(self, msg):\n        self.get_logger().info(\"received message\")\n\n        current_time = msg.header.stamp.sec+msg.header.stamp.nanosec*1e-9\n\n\n        if not self.t0:\n            self.t0 = current_time\n\n        t = current_time-self.t0\n\n        print(t)\n\n        if self.history is None:\n            self.history = numpy.array([[t, msg.linear_acceleration.x, msg.linear_acceleration.y, msg.linear_acceleration.z]])\n        else:\n            self.history = numpy.concatenate([self.history,numpy.array([[t, msg.linear_acceleration.x, msg.linear_acceleration.y, msg.linear_acceleration.z]])],0)\n\n\ndef main(args=None):\n    rclpy.init(args=args)\n\n    imu_data_logger = IMUDataLogger()\n\n    try:\n        rclpy.spin(imu_data_logger)\n#    except SystemExit:\n#        print('exiting')\n    except KeyboardInterrupt:\n        mydata = imu_data_logger.history.tolist()\n        mydict = {'data':mydata,}\n        with open('file.yaml','w') as f:\n            yaml.dump(mydict,f)\n\n    imu_data_logger.destroy_node()\n    rclpy.shutdown()\n\nif __name__ == '__main__':\n    main()\n\n</code></pre>"},{"location":"tutorials/jupyter-and-python/plot_imu_data/","title":"Plot IMU Data in ROS","text":"<pre><code># Derived from here: https://answers.ros.org/question/346650/matplotlib-dynamic-plot-in-ros2-callback/\n# Help here: https://stackoverflow.com/questions/35145555/python-real-time-plotting-ros-data\n# https://github.com/ros2/ros2/issues/509\n\nimport rclpy\nfrom rclpy.node import Node\nfrom rclpy.qos import qos_profile_sensor_data\n\nfrom sensor_msgs.msg import Imu\n\nimport matplotlib.pyplot as plt \nfrom matplotlib.animation import FuncAnimation\nimport numpy\n\nMEMORY = 50\n\nmy_frame  = numpy.zeros((MEMORY,2))\n\nclass IMUDataPlotter(Node):\n    labels = ['ax','ay','']\n\n    def __init__(self):\n        super().__init__('imu_data_plotter')\n        self.subscription = self.create_subscription(Imu,'/imu',self.listener_callback,qos_profile_sensor_data)\n        self.subscription  \n        self.t0 = None\n        self.history = None\n        self.fig  = None\n\n    def listener_callback(self, msg):\n        self.get_logger().info(\"received message\")\n\n        current_time = msg.header.stamp.sec+msg.header.stamp.nanosec*1e-9\n\n\n        if not self.t0:\n            self.t0 = current_time\n\n        t = current_time-self.t0\n\n        print(t)\n\n        if self.history is None:\n            self.history = numpy.zeros((MEMORY,4))\n\n        self.history[:-1,:] = self.history[1:,:]\n        self.history[-1,:] = numpy.array([t, msg.linear_acceleration.x, msg.linear_acceleration.y, msg.linear_acceleration.z])\n        self.update(1)\n\n    def update(self,i):\n\n        if self.fig is None:\n            first = True\n            self.fig = plt.figure()\n            self.ax = plt.subplot(111)\n        else:\n            first = False\n        self.ax.cla()\n        self.ax.plot(self.history[:,0],self.history[:,1])\n        self.ax.legend(['ax'],loc = \"upper left\")\n        self.ax.set_ylim(self.history[:,1].min(),self.history[:,1].max())    # plot memory\n        self.fig.canvas.draw()\n        if first:\n            plt.ion()\n            plt.show()\n\ndef main(args=None):\n    rclpy.init(args=args)\n\n    imu_data_plotter = IMUDataPlotter()\n\n    plt.ion()\n    plt.show()\n\n    rclpy.spin(imu_data_plotter)\n\n    imu_data_plotter.destroy_node()\n    rclpy.shutdown()\n\nif __name__ == '__main__':\n    main()\n\n</code></pre>"},{"location":"tutorials/jupyter-and-python/fft/fft/","title":"Plotting FFTs","text":"<p>Start by setting matplotlib to plot inline</p> <pre><code>%matplotlib inline\n</code></pre> <p>import packages</p> <pre><code>import numpy\nimport matplotlib.pyplot as plt\nimport yaml\nfrom math import pi\nimport scipy.fft\n</code></pre> <p>load data and convert to a numpy array</p> <pre><code>with open('/home/danaukes/dan_ws/file.yaml','r') as f:\n    mydictionary = yaml.load(f,Loader=yaml.FullLoader)\n\ndata = mydictionary['data']\ndata = numpy.array(data)\n</code></pre> <p>plot the raw x-axis acceleration data</p> <pre><code>plt.plot(data[:,0],data[:,1])\nplt.xlabel('time (s)')\nplt.ylabel('x acceleration')\n</code></pre> <pre><code>Text(0, 0.5, 'x acceleration')\n</code></pre> <p></p> <p>Use the FFT to convert from the time domain to the frequency domain</p> <pre><code>z = scipy.fft.fft(data[:,1])\n</code></pre> <pre><code>plt.plot(z)\n</code></pre> <pre><code>/usr/lib/python3/dist-packages/matplotlib/cbook/__init__.py:1390: ComplexWarning: Casting complex values to real discards the imaginary part\n  return np.asarray(x, float)\n\n\n\n\n\n[&lt;matplotlib.lines.Line2D at 0x7efc17e10130&gt;]\n</code></pre> <p></p> <pre><code>dt = numpy.mean(data[1:,0]-data[:-1,0])\ndt\n</code></pre> <pre><code>0.016086905679075777\n</code></pre> <pre><code>l = len(z)\nl = z.shape[0]\nprint('l = {0}'.format(l))\nw = 2*pi/dt*numpy.arange(1,l+1)/l\nw\n</code></pre> <pre><code>l = 1157\n\n\n\n\n\narray([3.37577890e-01, 6.75155779e-01, 1.01273367e+00, ...,\n       3.89902463e+02, 3.90240040e+02, 3.90577618e+02])\n</code></pre> <p>Plot all the data.</p> <pre><code>fig = plt.figure()\nplt.semilogx(w,20*numpy.log10(numpy.abs(numpy.real(z))))\n</code></pre> <pre><code>[&lt;matplotlib.lines.Line2D at 0x7efc180fcdc0&gt;]\n</code></pre> <p></p> <p>Plot only the frequencies below the Nyquist frequency</p> <pre><code>fig = plt.figure()\nplt.semilogx(w[:int(l/2)],20*numpy.log10(numpy.abs(numpy.real(z[:int(l/2)]))))\nplt.xlabel('w (rad/s)')\nplt.ylabel('dB')\n</code></pre> <pre><code>Text(0, 0.5, 'dB')\n</code></pre> <p></p> <pre><code>\n</code></pre>"},{"location":"tutorials/jupyter-and-python/filtering-example/filtering-example/","title":"Simple Filtering Example","text":"<pre><code>import numpy as np\nimport scipy as sp\n!pip install pandas\nimport pandas as pd\n</code></pre> <pre><code>Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pandas in ./.local/lib/python3.8/site-packages (1.5.3)\nRequirement already satisfied: numpy&gt;=1.20.3 in ./.local/lib/python3.8/site-packages (from pandas) (1.24.2)\nRequirement already satisfied: python-dateutil&gt;=2.8.1 in ./.local/lib/python3.8/site-packages (from pandas) (2.8.2)\nRequirement already satisfied: pytz&gt;=2020.1 in ./.local/lib/python3.8/site-packages (from pandas) (2022.7.1)\nRequirement already satisfied: six&gt;=1.5 in /usr/lib/python3/dist-packages (from python-dateutil&gt;=2.8.1-&gt;pandas) (1.14.0)\n</code></pre> <pre><code>%matplotlib inline\n</code></pre> <pre><code>import matplotlib.pyplot as plt\n</code></pre> <pre><code>nasdaq_df = pd.read_csv(\n    'https://github.com/ipython-books/'\n    'cookbook-2nd-data/blob/master/'\n    'nasdaq.csv?raw=true',\n    index_col='Date',\n    parse_dates=['Date'])\n\nnasdaq_df.head()\n</code></pre> Open High Low Close Adj Close Volume Date 1990-01-02 452.899994 459.299988 452.700012 459.299988 459.299988 110720000 1990-01-03 461.100006 461.600006 460.000000 460.899994 460.899994 152660000 1990-01-04 460.399994 460.799988 456.899994 459.399994 459.399994 147950000 1990-01-05 457.899994 459.399994 457.799988 458.200012 458.200012 137230000 1990-01-08 457.100006 458.700012 456.500000 458.700012 458.700012 115500000 <pre><code>date = nasdaq_df.index\nnasdaq = nasdaq_df['Close']\n</code></pre> <pre><code>fig, ax = plt.subplots(1, 1, figsize=(6, 4))\nnasdaq.plot(ax=ax, lw=1)\n</code></pre> <pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fea4e16b5b0&gt;\n</code></pre> <pre><code>import scipy.signal as sg\n# We get a triangular window with 60 samples.\nh = sg.get_window('triang', 60)\n# We convolve the signal with this window.\nfil = sg.convolve(nasdaq, h / h.sum())\n\nfig, ax = plt.subplots(1, 1, figsize=(6, 4))\n# We plot the original signal...\nnasdaq.plot(ax=ax, lw=3)\n# ... and the filtered signal.\nax.plot_date(date, fil[:len(nasdaq)],\n             '-w', lw=2)\n\n</code></pre> <pre><code>/usr/lib/python3/dist-packages/matplotlib/cbook/__init__.py:1402: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.\n  ndim = x[:, None].ndim\n/usr/lib/python3/dist-packages/matplotlib/axes/_base.py:276: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.\n  x = x[:, np.newaxis]\n\n\n\n\n\n[&lt;matplotlib.lines.Line2D at 0x7fea42cea760&gt;]\n</code></pre> <pre><code>fig, ax = plt.subplots(1, 1, figsize=(6, 4))\nnasdaq.plot(ax=ax, lw=3)\n# We create a 4-th order Butterworth low-pass filter.\nb, a = sg.butter(4, 2. / 365,analog=False)\n# We apply this filter to the signal.\nax.plot_date(date, sg.filtfilt(b, a, nasdaq),\n             '-w', lw=2)\n</code></pre> <pre><code>/usr/lib/python3/dist-packages/matplotlib/cbook/__init__.py:1402: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.\n  ndim = x[:, None].ndim\n/usr/lib/python3/dist-packages/matplotlib/axes/_base.py:276: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.\n  x = x[:, np.newaxis]\n\n\n\n\n\n[&lt;matplotlib.lines.Line2D at 0x7fea40f40b50&gt;]\n</code></pre> <pre><code>b\n</code></pre> <pre><code>array([5.36664515e-09, 2.14665806e-08, 3.21998709e-08, 2.14665806e-08,\n       5.36664515e-09])\n</code></pre> <pre><code>a\n</code></pre> <pre><code>array([ 1.        , -3.95501738,  5.8660611 , -3.86705685,  0.95601322])\n</code></pre> <pre><code>h\n</code></pre> <pre><code>array([0.03225806, 0.06451613, 0.09677419, 0.12903226, 0.16129032,\n       0.19354839, 0.22580645, 0.25806452, 0.29032258, 0.32258065,\n       0.35483871, 0.38709677, 0.41935484, 0.4516129 , 0.48387097,\n       0.51612903, 0.5483871 , 0.58064516, 0.61290323, 0.64516129,\n       0.67741935, 0.70967742, 0.74193548, 0.77419355, 0.80645161,\n       0.83870968, 0.87096774, 0.90322581, 0.93548387, 0.96774194,\n       1.        , 0.96774194, 0.93548387, 0.90322581, 0.87096774,\n       0.83870968, 0.80645161, 0.77419355, 0.74193548, 0.70967742,\n       0.67741935, 0.64516129, 0.61290323, 0.58064516, 0.5483871 ,\n       0.51612903, 0.48387097, 0.4516129 , 0.41935484, 0.38709677,\n       0.35483871, 0.32258065, 0.29032258, 0.25806452, 0.22580645,\n       0.19354839, 0.16129032, 0.12903226, 0.09677419, 0.06451613])\n</code></pre> <pre><code>plt.plot(h)\n</code></pre> <pre><code>[&lt;matplotlib.lines.Line2D at 0x7fea40cc1370&gt;]\n</code></pre> <pre><code>\n</code></pre>"},{"location":"tutorials/jupyter-and-python/simple-plot-example/simple-plot-example/","title":"Simple Plotting Example","text":"<pre><code>%matplotlib inline\n</code></pre> <p>!pip install matplotlib numpy scipy</p> <pre><code>import matplotlib\nimport numpy\nimport scipy\n</code></pre> <pre><code>x = numpy.array([0,1,2,3,4,5,6,7])\nx\n</code></pre> <pre><code>array([0, 1, 2, 3, 4, 5, 6, 7])\n</code></pre> <pre><code>y = 2*x\ny\n</code></pre> <pre><code>array([ 0,  2,  4,  6,  8, 10, 12, 14])\n</code></pre> <pre><code>import matplotlib.pyplot as plt\n#figure = plt.figure(figsize=(3,2))\nfigure = plt.figure(dpi=50)\nax = plt.subplot(121)\nplt.plot(x,y,'ro--')\nplt.xlabel('time')\nplt.ylabel('performance')\nplt.title(\"This is my title\")\nax = plt.subplot(122)\nplt.plot(x,y,'bo--')\nplt.xlabel('time')\nplt.ylabel('performance')\nplt.title(\"This is my title\")\n</code></pre> <pre><code>Text(0.5, 1.0, 'This is my title')\n</code></pre> <p></p> <pre><code>\n</code></pre>"},{"location":"tutorials/opencv/","title":"Anaconda Python","text":"<ul> <li>as far as I know, doesn't play nice with ROS2</li> </ul>"},{"location":"tutorials/opencv/#installing","title":"Installing","text":"<ul> <li>Anaconda</li> <li>Packages<ul> <li>64-bit Linux</li> </ul> </li> </ul>"},{"location":"tutorials/opencv/#simple-conda-environment-environment","title":"Simple Conda Environment Environment","text":"<p>make sure you have already installed</p> <p>ffmpeg gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly</p> <pre><code>conda create -n cv\nconda activate cv\nconda install -y jupyter matplotlib numpy scipy\nconda install -y -c conda-forge opencv\npip install yt-dlp\n</code></pre> <pre><code>jupyter lab\n</code></pre> <p>Open and run your code</p> <p>Delete your environment</p> <pre><code>conda remove --name cv --all\n</code></pre>"},{"location":"tutorials/opencv/#yt-dlp","title":"yt-dlp","text":"<pre><code>pip install yt-dlp #apt is out of date\nyt-dlp -F https://www.youtube.com/watch?v=43r0hha2320\nyt-dlp -f &lt;num here&gt; https://www.youtube.com/watch?v=43r0hha2320\n</code></pre>"},{"location":"tutorials/opencv/#computer-vision","title":"Computer Vision","text":""},{"location":"tutorials/opencv/#reading-displaying-and-writing","title":"Reading, Displaying, and Writing","text":"<pre><code># import the cv2 library\nimport cv2\n\n# The function cv2.imread() is used to read an image.\nimg_grayscale = cv2.imread('test.jpg',0)\n# The function cv2.imshow() is used to display an image in a window.\ncv2.imshow('graycsale image',img_grayscale)\n# waitKey() waits for a key press to close the window and 0 specifies indefinite loop\ncv2.waitKey(0)\n# cv2.destroyAllWindows() simply destroys all the windows we created.\ncv2.destroyAllWindows()\n# The function cv2.imwrite() is used to write an image.\ncv2.imwrite('grayscale.jpg',img_grayscale)\n</code></pre> <p>:::{style=\"font-size:12pt\"} https://learnopencv.com/read-display-and-write-an-image-using-opencv/ :::</p>"},{"location":"tutorials/opencv/#imread","title":"Imread","text":"<pre><code>imread(filename, flags)\n</code></pre> <ol> <li>The first argument is the fully qualified image pathname</li> <li>The second argument lets you specify how the image should be represented. </li> </ol> <pre><code>cv2.IMREAD_UNCHANGED  or -1\ncv2.IMREAD_GRAYSCALE  or 0\ncv2.IMREAD_COLOR  or 1\n</code></pre> <p>:::{style=\"font-size:12pt\"} https://learnopencv.com/read-display-and-write-an-image-using-opencv/ :::</p>"},{"location":"tutorials/opencv/#imshow","title":"Imshow","text":"<pre><code>imshow(window_name, image)\n</code></pre> <ol> <li>The first argument is the window name that will be displayed on the window.</li> <li>The second argument is the image that you want to display. </li> </ol> <p>:::{style=\"font-size:18pt\"}</p> <p>Note: <code>waitKey(var)</code> is a keyboard-binding function where <code>var</code> is the time (in milliseconds) the window will be displayed. :::</p> <p>:::{style=\"font-size:12pt\"} https://learnopencv.com/read-display-and-write-an-image-using-opencv/ :::</p>"},{"location":"tutorials/opencv/#imwrite","title":"Imwrite","text":"<pre><code>imwrite(filename, image).\n</code></pre> <ol> <li>The first argument is the filename.  The conversion is performed automatically based on the extension</li> <li>The second argument is the image you want to save</li> </ol> <p>:::{style=\"font-size:12pt\"} https://learnopencv.com/read-display-and-write-an-image-using-opencv/ :::</p>"},{"location":"tutorials/opencv/#videocapture","title":"VideoCapture","text":"<p><code>cv2.VideoCapture(var)</code></p> <ul> <li>var can represent a camera index or a file path to a video</li> </ul>"},{"location":"tutorials/opencv/#cropping","title":"Cropping","text":"<ul> <li>Image is stored as a numpy array</li> <li>cropping is done just as you access subarrays</li> </ul> <pre><code># Cropping an image\ncropped_image = img[80:280, 150:330]\n</code></pre> <p>:::{style=\"font-size:12pt\"} - https://learnopencv.com/cropping-an-image-using-opencv/ - https://numpy.org/doc/stable/user/numpy-for-matlab-users.html :::</p>"},{"location":"tutorials/opencv/#rotation","title":"Rotation","text":"\\[M = \\begin{bmatrix} cos\\theta &amp; -sin\\theta \\\\ sin\\theta &amp; cos\\theta \\end{bmatrix} \\] <pre><code># dividing height and width by 2 to get the center of the image\nheight, width = image.shape[:2]\n# get the center coordinates of the image to create the 2D rotation matrix\ncenter = (width/2, height/2)\n# using cv2.getRotationMatrix2D() to get the rotation matrix\nrotate_matrix = cv2.getRotationMatrix2D(center=center, angle=45, scale=1)\n# rotate the image using cv2.warpAffine\nrotated_image = cv2.warpAffine(src=image, M=rotate_matrix, dsize=(width, height))\n</code></pre> <p>:::{style=\"font-size:12pt\"} - https://learnopencv.com/image-rotation-and-translation-using-opencv/ :::</p>"},{"location":"tutorials/opencv/#translation","title":"Translation","text":"\\[ M = \\begin{bmatrix} 1 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; t_y \\end{bmatrix} \\] <pre><code>image = cv2.imread('image.jpg')\nheight, width = image.shape[:2]\nM = np.array([[1, 0, tx],[0, 1, ty]], dtype=np.float32)\nimage2 = cv2.warpAffine(src=image, M=M, dsize=(width, height))\n</code></pre> <p>:::{style=\"font-size:12pt\"} - https://learnopencv.com/image-rotation-and-translation-using-opencv/ :::</p>"},{"location":"tutorials/opencv/#color-spaces-segmentation","title":"Color Spaces &amp; Segmentation","text":"<ul> <li>Possible to switch between color spaces</li> <li>RGB, HSV, YCrCb, LAB</li> </ul> <pre><code>bright = cv2.imread('cube1.jpg')\nbrightHSV = cv2.cvtColor(bright, cv2.COLOR_BGR2HSV)\nbgr = [40, 158, 16]\nthresh = 40\nhsv = cv2.cvtColor( np.uint8([[bgr]] ), cv2.COLOR_BGR2HSV)[0][0]\nminHSV = np.array([hsv[0] - thresh, hsv[1] - thresh, hsv[2] - thresh])\nmaxHSV = np.array([hsv[0] + thresh, hsv[1] + thresh, hsv[2] + thresh])\nmaskHSV = cv2.inRange(brightHSV, minHSV, maxHSV)\nresultHSV = cv2.bitwise_and(brightHSV, brightHSV, mask = maskHSV)\n</code></pre>"},{"location":"tutorials/opencv/#thresholding","title":"Thresholding","text":"<ul> <li>Can use native numpy operatiors <code>&gt;</code> or <code>&lt;</code></li> <li>Can use more advanced thresholding function</li> </ul> <pre><code># import opencv\nimport cv2\n# Read image\nsrc = cv2.imread(\"threshold.png\", cv2.IMREAD_GRAYSCALE)\n# Set threshold and maxValue\nthresh = 0\nmaxValue = 255\n# Basic threshold example\nth, dst = cv2.threshold(src, thresh, maxValue, cv2.THRESH_BINARY);\n</code></pre>"},{"location":"tutorials/opencv/#filtering","title":"Filtering","text":"<ul> <li>discussed a bit last time</li> <li>concept of a kernel</li> </ul> <p>:::{style=\"font-size:12pt\"} https://learnopencv.com/image-filtering-using-convolution-in-opencv/ :::</p>"},{"location":"tutorials/opencv/#blob-detection","title":"Blob Detection","text":"<p>:::{style=\"font-size:12pt\"} https://www.delftstack.com/howto/python/opencv-blob-detection/</p> <p>This one didn't work for me... https://learnopencv.com/blob-detection-using-opencv-python-c/ :::</p>"},{"location":"tutorials/opencv/#edge-detection","title":"Edge Detection","text":"<p>:::{style=\"font-size:12pt\"} https://learnopencv.com/edge-detection-using-opencv/ :::</p>"},{"location":"tutorials/opencv/#contour-detection","title":"Contour Detection","text":"<p>:::{style=\"font-size:12pt\"} https://learnopencv.com/contour-detection-using-opencv-python-c/ :::</p>"},{"location":"tutorials/opencv/#background-estimation","title":"Background Estimation","text":"<p>:::{style=\"font-size:12pt\"} https://learnopencv.com/simple-background-estimation-in-videos-using-opencv-c-python/ :::</p>"},{"location":"tutorials/turtlebot/04-oak-d-camera/","title":"Oak-D Camera information","text":"<p>https://robofoundry.medium.com/oak-d-lite-camera-ros2-setup-1e74ed03350d</p>"}]}